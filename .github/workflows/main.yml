name: Laravel Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DB_CONNECTION: mysql
  DB_DATABASE: laravel_test
  DB_USERNAME: root
  DB_PASSWORD: secret

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, ctype, fileinfo, dom, curl, pdo, mysql, bcmath, gd, imagick, redis
          coverage: pcov
          ini-values: memory_limit=2G

      - name: Validate composer.json
        run: composer validate --strict

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Prepare environment
        run: |
          cp .env.example .env.testing
          echo "APP_ENV=testing" >> .env.testing
          echo "APP_KEY=base64:$(openssl rand -base64 32)" >> .env.testing
          echo "CACHE_DRIVER=redis" >> .env.testing
          echo "SESSION_DRIVER=redis" >> .env.testing
          echo "QUEUE_CONNECTION=redis" >> .env.testing

      - name: Generate app key
        run: php artisan key:generate --env=testing

      - name: Run migrations
        run: php artisan migrate:fresh --env=testing --force

      - name: Run tests
        run: php artisan test --env=testing --coverage-clover=coverage.xml
